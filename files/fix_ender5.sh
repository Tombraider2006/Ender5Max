#!/bin/bash
set -u

# ================================
#   Tom Tomich Script v2.1
#   Helper & Fix Tool for Ender-5 Max
# ================================

BLUE="\033[1;34m"
GREEN="\033[1;32m"
YELLOW="\033[1;33m"
RESET="\033[0m"

PRINTER_CFG="/usr/data/printer_data/config/printer.cfg"
MACRO_CFG="/usr/data/printer_data/config/gcode_macro.cfg"
PRINTER_BAK="${PRINTER_CFG}.bak"
MACRO_BAK="${MACRO_CFG}.bak"

show_header() {
  clear
  echo -e "${BLUE}#############################################${RESET}"
  echo -e "${BLUE}#                                           #${RESET}"
  echo -e "${BLUE}#         üöÄ Tom Tomich Script v2.1         #${RESET}"
  echo -e "${BLUE}#   Helper & Fix Tool for Ender-5 Max       #${RESET}"
  echo -e "${BLUE}#                                           #${RESET}"
  echo -e "${BLUE}#############################################${RESET}"
  echo ""
}

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Klipper (–∫–∞–∫ –≤ helper-script: init.d / service / systemctl / Moonraker)
restart_klipper() {
  echo -e "${YELLOW}üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Klipper...${RESET}"
  # 1) init.d
  if [[ -x "/etc/init.d/klipper" ]]; then
    /etc/init.d/klipper restart && { echo -e "${GREEN}‚úÖ Klipper –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ /etc/init.d/klipper${RESET}"; return 0; }
  fi

  # 2) service
  if command -v service >/dev/null 2>&1; then
    service klipper restart && { echo -e "${GREEN}‚úÖ Klipper –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ service${RESET}"; return 0; }
  fi

  # 3) systemctl (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
  if command -v systemctl >/dev/null 2>&1; then
    if sudo systemctl restart klipper >/dev/null 2>&1; then
      echo -e "${GREEN}‚úÖ Klipper –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ systemctl${RESET}"
      return 0
    fi
  fi

  # 4) Moonraker API (fallback)
  if command -v curl >/dev/null 2>&1; then
    curl -s -X POST "http://localhost:7125/printer/restart" >/dev/null 2>&1
    if [[ $? -eq 0 ]]; then
      echo -e "${GREEN}‚úÖ Klipper –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ Moonraker API${RESET}"
      return 0
    fi
  fi

  echo -e "${YELLOW}‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Klipper. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Ä—É—á–Ω—É—é.${RESET}"
  return 1
}

# ---------- –£—Å—Ç–∞–Ω–æ–≤–∫–∏ / –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ----------

install_moonraker() {
  echo -e "${YELLOW}üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Moonraker...${RESET}"
  cd /usr/share || { echo -e "${YELLOW}‚ùó –ù–µ –º–æ–≥—É –ø–µ—Ä–µ–π—Ç–∏ –≤ /usr/share${RESET}"; return 1; }
  if [[ -d "moonraker" ]]; then
    echo -e "${YELLOW}‚ñ∂ moonraker —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è—é...${RESET}"
    cd moonraker && git pull || true
  else
    git clone https://github.com/Arksine/moonraker moonraker || { echo -e "${YELLOW}‚ùó git clone failed${RESET}"; return 1; }
  fi
  cd moonraker || return 1
  if [[ -x "./scripts/install-moonraker.sh" ]]; then
    ./scripts/install-moonraker.sh || echo -e "${YELLOW}‚ö†Ô∏è –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É${RESET}"
  else
    echo -e "${YELLOW}‚ö†Ô∏è install script not found, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π${RESET}"
  fi
  echo -e "${GREEN}‚úÖ Moonraker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω/–æ–±–Ω–æ–≤–ª—ë–Ω.${RESET}"
  restart_klipper
}

install_fluidd() {
  echo -e "${YELLOW}üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Fluidd...${RESET}"
  mkdir -p /usr/share/nginx/html/fluidd
  TMPZIP="/tmp/fluidd.zip"
  wget -q --no-check-certificate "https://github.com/fluidd-core/fluidd/releases/latest/download/fluidd.zip" -O "$TMPZIP" || { echo -e "${YELLOW}‚ùó –°–∫–∞—á–∏–≤–∞–Ω–∏–µ fluidd.zip –Ω–µ —É–¥–∞–ª–æ—Å—å${RESET}"; return 1; }
  unzip -o "$TMPZIP" -d /usr/share/nginx/html/fluidd >/dev/null 2>&1 || true
  rm -f "$TMPZIP"
  echo -e "${GREEN}‚úÖ Fluidd —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${RESET}"
}

install_mainsail() {
  echo -e "${YELLOW}üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Mainsail...${RESET}"
  mkdir -p /usr/share/nginx/html/mainsail
  TMPZIP="/tmp/mainsail.zip"
  wget -q --no-check-certificate "https://github.com/mainsail-crew/mainsail/releases/latest/download/mainsail.zip" -O "$TMPZIP" || { echo -e "${YELLOW}‚ùó –°–∫–∞—á–∏–≤–∞–Ω–∏–µ mainsail.zip –Ω–µ —É–¥–∞–ª–æ—Å—å${RESET}"; return 1; }
  unzip -o "$TMPZIP" -d /usr/share/nginx/html/mainsail >/dev/null 2>&1 || true
  rm -f "$TMPZIP"
  echo -e "${GREEN}‚úÖ Mainsail —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${RESET}"
}

install_entware() {
  echo -e "${YELLOW}üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Entware...${RESET}"
  wget -q --no-check-certificate -O - http://bin.entware.net/armv7sf-k3.2/installer/generic.sh | sh || { echo -e "${YELLOW}‚ùó –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Entware –≤–µ—Ä–Ω—É–ª–∞ –æ—à–∏–±–∫—É${RESET}"; return 1; }
  # –¥–æ–±–∞–≤–∏—Ç—å PATH –≤ –ø—Ä–æ—Ñ–∏–ª—å
  if ! grep -q "/opt/bin" /etc/profile 2>/dev/null; then
    echo 'export PATH=$PATH:/opt/bin:/opt/sbin' >> /etc/profile || true
  fi
  echo -e "${GREEN}‚úÖ Entware —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${RESET}"
}

enable_gcode_shell_command() {
  echo -e "${YELLOW}‚öôÔ∏è –í–∫–ª—é—á–∞–µ–º Klipper Gcode Shell Command...${RESET}"

  # –î–æ–±–∞–≤–ª—è–µ–º [gcode_shell_command beep] –≤ printer.cfg (–µ—Å–ª–∏ –Ω–µ—Ç)
  if ! grep -qF "[gcode_shell_command beep]" "$PRINTER_CFG"; then
    cat <<'EOF' >> "$PRINTER_CFG"

[gcode_shell_command beep]
command: beep
timeout: 2
verbose: False
EOF
    echo -e "${YELLOW}‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ [gcode_shell_command beep] –≤ $PRINTER_CFG${RESET}"
  else
    echo -e "${YELLOW}‚ÑπÔ∏è [gcode_shell_command beep] —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ $PRINTER_CFG${RESET}"
  fi

  # –î–æ–±–∞–≤–ª—è–µ–º –º–∞–∫—Ä–æ—Å BEEP –≤ gcode_macro.cfg (–µ—Å–ª–∏ –Ω–µ—Ç)
  if ! grep -qF "[gcode_macro BEEP]" "$MACRO_CFG"; then
    cat <<'EOF' >> "$MACRO_CFG"

[gcode_macro BEEP] # –∑–≤—É–∫ –±–∏–ø.
description: Play a sound
gcode:
  RUN_SHELL_COMMAND CMD=beep
EOF
    echo -e "${YELLOW}‚ûï –î–æ–±–∞–≤–ª–µ–Ω –º–∞–∫—Ä–æ—Å BEEP –≤ $MACRO_CFG${RESET}"
  else
    echo -e "${YELLOW}‚ÑπÔ∏è –ú–∞–∫—Ä–æ—Å BEEP —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ $MACRO_CFG${RESET}"
  fi

  restart_klipper
  echo -e "${GREEN}‚úÖ Gcode Shell Command –≤–∫–ª—é—á–µ–Ω.${RESET}"
}

install_shaper_calibrations() {
  echo -e "${YELLOW}üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Improved Shaper Calibrations...${RESET}"
  cd /usr/share || { echo -e "${YELLOW}‚ùó –ù–µ –º–æ–≥—É –ø–µ—Ä–µ–π—Ç–∏ –≤ /usr/share${RESET}"; return 1; }
  if [[ -d "shaper-calibrations" ]]; then
    cd shaper-calibrations && git pull || true
  else
    git clone https://github.com/Guilouz/klipper-shaper-calibrations shaper-calibrations || { echo -e "${YELLOW}‚ùó git clone failed${RESET}"; return 1; }
  fi
  echo -e "${GREEN}‚úÖ Improved Shaper Calibrations —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.${RESET}"
}

# ---------- Fixes for Ender-5 Max ----------
fix_e5m() {
  # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
  if [[ ! -f "$PRINTER_CFG" || ! -f "$MACRO_CFG" ]]; then
    echo -e "${YELLOW}‚ùó –û–¥–∏–Ω –∏–∑ –∫–æ–Ω—Ñ–∏–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: ${PRINTER_CFG}, ${MACRO_CFG}${RESET}"
    return 1
  fi

  cp -p "$PRINTER_CFG" "$PRINTER_BAK"
  cp -p "$MACRO_CFG" "$MACRO_BAK"
  echo -e "${YELLOW}üìÇ –°–æ–∑–¥–∞–Ω—ã –±—ç–∫–∞–ø—ã:${RESET}"
  echo -e "   $PRINTER_BAK"
  echo -e "   $MACRO_BAK"

  # 1) Height_module2 -> _Height_module2
  sed -i 's/^\[output_pin Height_module2\]/[output_pin _Height_module2]/' "$PRINTER_CFG"

  # 2) –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ light_pin / MainBoardFan / fan0..fan1 / multi_pin / controller_fan
  for pat in "output_pin light_pin" "output_pin MainBoardFan" \
             "output_pin fan0" "output_pin en_fan0" "output_pin fan1" "output_pin en_fan1" \
             "multi_pin part_fans" "multi_pin en_part_fans" "fan_generic part" "controller_fan MCU_fan"
  do
    sed -i "/^\[$pat\]/,/^$/d" "$PRINTER_CFG"
    sed -i "/^\[$pat\]/,/^\[/d" "$PRINTER_CFG"
  done

  # 3) –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –±–ª–æ–∫–∏ –≤ printer.cfg
  cat <<'EOF' >> "$PRINTER_CFG"

[output_pin light_pin] # –æ—Å–≤–µ—â–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –ø—Ä–∏–Ω—Ç–µ—Ä–∞. –∫–æ—Å—è–∫ –ø—Ä–æ—à–∏–≤–∫–∏ –∫—Ä–µ–∞–ª–∏—Ç–∏.
pin: !PC0
pwm: True
cycle_time: 0.010
value: 1.0

[controller_fan MCU_fan] # –≤–∫–ª—é—á–∞–µ–º –æ–±–¥—É–≤ –ø–æ—Å–ª–µ –≤–∫–ª—é—á–µ–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–æ–≤
pin: PB1
max_power: 1.0
fan_speed: 1
kick_start_time: 0
stepper: stepper_x

[multi_pin part_fans]
pins:!nozzle_mcu:PB15,!nozzle_mcu:PA9

[multi_pin en_part_fans]
pins:nozzle_mcu:PB6,nozzle_mcu:PB9

[fan_generic part]
pin: multi_pin:part_fans
enable_pin: multi_pin:en_part_fans
cycle_time: 0.0100
hardware_pwm: false
EOF

  # 4) gcode_macro.cfg ‚Äî —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –º–∞–∫—Ä–æ—Å—ã –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  for pat in "gcode_macro M106" "gcode_macro M107" "gcode_macro TURN_OFF_FANS" "gcode_macro TURN_ON_FANS" \
             "firmware_retraction" "gcode_shell_command beep" "gcode_macro BEEP" \
             "delayed_gcode light_init" "exclude_object" "gcode_macro PID_BED" "gcode_macro PID_HOTEND"
  do
    sed -i "/^\[$pat\]/,/^$/d" "$MACRO_CFG"
    sed -i "/^\[$pat\]/,/^\[/d" "$MACRO_CFG"
  done
  sed -i '/^variable_fan0_min:/d' "$MACRO_CFG"
  sed -i '/^variable_fan1_min:/d' "$MACRO_CFG"

  # 5) –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–ª–æ–∫–∏ –≤ gcode_macro.cfg (–±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è beep –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ)
  cat <<'EOF' >> "$MACRO_CFG"

[firmware_retraction]
retract_length: 0.45 # –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
retract_speed: 30
unretract_extra_length: 0
unretract_speed: 30

[delayed_gcode light_init]
initial_duration: 5.01
gcode:
  SET_PIN PIN=light_pin VALUE=1

[exclude_object]

[gcode_macro PID_BED]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET={params.BED_TEMP|default(70)}
  SAVE_CONFIG

[gcode_macro PID_HOTEND]
description: Start Hotend PID
gcode:
  G90
  G28
  G1 Z10 F600
  M106 S255
  PID_CALIBRATE HEATER=extruder TARGET={params.HOTEND_TEMP|default(250)}
  M107

[gcode_macro M106]
description: Set Fan Speed. P0 for part
gcode:
  {% set fan_id = params.P|default(0)|int %}
  {% if fan_id == 0 %}
    {% set speed_param = params.S|default(255)|int %}
    {% if speed_param > 0 %}
      {% set speed = (speed_param|float / 255) %}
    {% else %}
      {% set speed = 0 %}
    {% endif %}
    SET_FAN_SPEED FAN=part SPEED={speed}
  {% endif %}

[gcode_macro M107]
description: Set Fan Off. P0 for part
gcode:
  SET_FAN_SPEED FAN=part SPEED=0

[gcode_macro TURN_OFF_FANS]
description: Stop chamber, auxiliary and part fan
gcode:
    SET_FAN_SPEED FAN=part SPEED=0

[gcode_macro TURN_ON_FANS]
description: Turn on chamber, auxiliary and part fan
gcode:
    SET_FAN_SPEED FAN=part SPEED=1
EOF

  # 6) –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ [gcode_shell_command beep] –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ printer.cfg (–∫–∞–∫ –≤ helper-script)
  if ! grep -qF "[gcode_shell_command beep]" "$PRINTER_CFG"; then
    cat <<'EOF' >> "$PRINTER_CFG"

[gcode_shell_command beep]
command: beep
timeout: 2
verbose: False
EOF
    echo -e "${YELLOW}‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ [gcode_shell_command beep] –≤ $PRINTER_CFG${RESET}"
  fi

  # 7) –ò –º–∞–∫—Ä–æ—Å BEEP –≤ gcode_macro.cfg (–µ—Å–ª–∏ –Ω–µ—Ç) ‚Äî —Å—Ç–∞–≤–∏–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–∞–∫—Ä–æ—Å
  if ! grep -qF "[gcode_macro BEEP]" "$MACRO_CFG"; then
    cat <<'EOF' >> "$MACRO_CFG"

[gcode_macro BEEP] # –∑–≤—É–∫ –±–∏–ø.
description: Play a sound
gcode:
  RUN_SHELL_COMMAND CMD=beep
EOF
    echo -e "${YELLOW}‚ûï –î–æ–±–∞–≤–ª–µ–Ω –º–∞–∫—Ä–æ—Å BEEP –≤ $MACRO_CFG${RESET}"
  fi

  echo -e "${GREEN}‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è Ender-5 Max –ø—Ä–∏–º–µ–Ω–µ–Ω—ã.${RESET}"
  restart_klipper
}

restore_e5m() {
  if [[ -f "$PRINTER_BAK" && -f "$MACRO_BAK" ]]; then
    cp -p "$PRINTER_BAK" "$PRINTER_CFG"
    cp -p "$MACRO_BAK" "$MACRO_CFG"
    echo -e "${YELLOW}‚ôªÔ∏è  –ö–æ–Ω—Ñ–∏–≥–∏ Ender-5 Max –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.${RESET}"
    restart_klipper
    echo -e "${GREEN}‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.${RESET}"
  else
    echo -e "${YELLOW}‚ùó –ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.${RESET}"
  fi
}

# ---------- –ú–µ–Ω—é ----------
show_header
echo -e "${GREEN}1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Moonraker${RESET}"
echo -e "${GREEN}2) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Fluidd${RESET}"
echo -e "${GREEN}3) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Mainsail${RESET}"
echo -e "${GREEN}4) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Entware${RESET}"
echo -e "${GREEN}5) –í–∫–ª—é—á–∏—Ç—å Klipper Gcode Shell Command${RESET}"
echo -e "${GREEN}6) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Improved Shapers Calibrations${RESET}"
echo -e "${GREEN}7) (—Ä–µ–∑–µ—Ä–≤)${RESET}"
echo -e "${GREEN}8) –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–æ–≤ –¥–ª—è Ender-5 Max${RESET}"
echo -e "${GREEN}9) –û—Ç–∫–∞—Ç–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Ender-5 Max${RESET}"
echo -e "${GREEN}q) –í—ã–π—Ç–∏${RESET}"
echo -n "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: "
read -r choice

case "$choice" in
  1) install_moonraker ;;
  2) install_fluidd ;;
  3) install_mainsail ;;
  4) install_entware ;;
  5) enable_gcode_shell_command ;;
  6) install_shaper_calibrations ;;
  7) echo -e "${YELLOW}–†–µ–∑–µ—Ä–≤–Ω—ã–π –ø—É–Ω–∫—Ç.${RESET}" ;;
  8) fix_e5m ;;
  9) restore_e5m ;;
  q|Q) echo -e "${YELLOW}üö™ –í—ã—Ö–æ–¥.${RESET}" ;;
  *) echo -e "${YELLOW}‚ùì –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä${RESET}" ;;
esac

