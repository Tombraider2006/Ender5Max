#!/bin/sh
# ========================================
# üöÄ Tom Tomich Script (Ender-5 Max Fix)
# ========================================

# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
PRINTER_CFG="/usr/data/printer_data/config/printer.cfg"
GCODE_MACRO_CFG="/usr/data/printer_data/config/gcode_macro.cfg"

# –¶–≤–µ—Ç–∞
GREEN="\033[1;32m"
RED="\033[1;31m"
YELLOW="\033[1;33m"
RESET="\033[0m"

show_menu() {
    clear
printf "========================================\n"
printf "üöÄ Tom Tomich Script (Ender-5 Max Fix)\n"
printf "========================================\n"
printf "${BLUE}‚ö†Ô∏è  –í–Ω–æ—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Helper Script –ø—É–Ω–∫—Ç–æ–≤ 1 (2 –∏–ª–∏ 3), 4, 5, 10${RESET}\n\n"


    if [ -f "${PRINTER_CFG}.bak" ] || [ -f "${GCODE_MACRO_CFG}.bak" ]; then
        printf "[1] ${RED}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ)${RESET}\n"
        printf "[2] ${GREEN}–û—Ç–∫–∞—Ç–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è${RESET}\n"
    else
        printf "[1] ${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è${RESET}\n"
        printf "[2] ${RED}–û—Ç–∫–∞—Ç–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ)${RESET}\n"
    fi

    printf "[3] –í—ã–π—Ç–∏\n\n"
    printf "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: "
}


apply_fixes() {
    echo -e "${YELLOW}‚öôÔ∏è –í–Ω–æ—Å–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...${RESET}"

    # --- printer.cfg ---
    if [ ! -f "${PRINTER_CFG}.bak" ]; then
        cp -p "$PRINTER_CFG" "${PRINTER_CFG}.bak"
    fi

    # 1. Height_module2 ‚Üí _Height_module2
    sed -i 's/^\[output_pin Height_module2\]/[output_pin _Height_module2]/' "$PRINTER_CFG"

    # 2. light_pin –±–ª–æ–∫
    sed -i '/^\[output_pin light_pin\]/,/^$/d' "$PRINTER_CFG"
    cat >> "$PRINTER_CFG" <<'EOF'

[output_pin light_pin] #  –æ—Å–≤–µ—â–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –ø—Ä–∏–Ω—Ç–µ—Ä–∞. –∫–æ—Å—è–∫ –ø—Ä–æ—à–∏–≤–∫–∏ –∫—Ä–µ–∞–ª–∏—Ç–∏.
pin: !PC0
pwm: True
cycle_time: 0.010
value: 1.0
EOF

    # 3. MainBoardFan ‚Üí controller_fan MCU_fan
    sed -i '/^\[output_pin MainBoardFan\]/,/^$/d' "$PRINTER_CFG"
    cat >> "$PRINTER_CFG" <<'EOF'

[controller_fan MCU_fan] # –≤–∫–ª—é—á–∞–µ–º –æ–±–¥—É–≤ –ø–æ—Å–ª–µ –≤–∫–ª—é—á–µ–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–æ–≤
pin: PB1
max_power: 1.0
fan_speed: 1
kick_start_time: 0
stepper: stepper_x
EOF

    # 4. –£–¥–∞–ª—è–µ–º fan0/fan1 –∏ –∫–∏—Ç–∞–π—Å–∫–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
    sed -i '/^###Âñ∑Â§¥ÂâçÈù¢È£éÊâá/,/^$/d' "$PRINTER_CFG"
    sed -i '/^###Âñ∑Â§¥ÂêéÈù¢È£éÊâá/,/^$/d' "$PRINTER_CFG"
    sed -i '/^\[output_pin fan0\]/,/^$/d' "$PRINTER_CFG"
    sed -i '/^\[output_pin en_fan0\]/,/^$/d' "$PRINTER_CFG"
    sed -i '/^\[output_pin fan1\]/,/^$/d' "$PRINTER_CFG"
    sed -i '/^\[output_pin en_fan1\]/,/^$/d' "$PRINTER_CFG"

    # 5. –í—Å—Ç–∞–≤–ª—è–µ–º multi_pin + fan_generic
    cat >> "$PRINTER_CFG" <<'EOF'

[multi_pin part_fans]
pins:!nozzle_mcu:PB15,!nozzle_mcu:PA9

[multi_pin en_part_fans]
pins:nozzle_mcu:PB6,nozzle_mcu:PB9

[fan_generic part]
pin: multi_pin:part_fans
enable_pin: multi_pin:en_part_fans
cycle_time: 0.0100
hardware_pwm: false
EOF

    # --- gcode_macro.cfg ---
    if [ ! -f "${GCODE_MACRO_CFG}.bak" ]; then
        cp -p "$GCODE_MACRO_CFG" "${GCODE_MACRO_CFG}.bak"
    fi

    # 1. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ M106 –∏ M107
    sed -i '/^\[gcode_macro M106\]/,/^\s*$/d' "$GCODE_MACRO_CFG"
    sed -i '/^\[gcode_macro M107\]/,/^\s*$/d' "$GCODE_MACRO_CFG"

    # 2. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ
    cat >> "$GCODE_MACRO_CFG" <<'EOF'

[gcode_macro M106]
description: Set Fan Speed. P0 for part
gcode:
  {% set fan_id = params.P|default(0)|int %}
  {% if fan_id == 0 %}
    {% set speed_param = params.S|default(255)|int %}
    {% if speed_param > 0 %}
      {% set speed = (speed_param|float / 255) %}
    {% else %}
      {% set speed = 0 %}
    {% endif %}
    SET_FAN_SPEED FAN=part SPEED={speed}
  {% endif %}

[gcode_macro M107]
description: Set Fan Off. P0 for part
gcode:
  SET_FAN_SPEED FAN=part SPEED=0

[gcode_macro TURN_OFF_FANS]
description: Stop chamber, auxiliary and part fan
gcode:
    SET_FAN_SPEED FAN=part SPEED=0

[gcode_macro TURN_ON_FANS]
description: Turn on chamber, auxiliary and part fan
gcode:
    SET_FAN_SPEED FAN=part SPEED=1
EOF

    echo -e "${GREEN}‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω—ã!${RESET}"
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
}

rollback_fixes() {
    echo -e "${YELLOW}üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ç–∫–∞—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...${RESET}"

    if [ -f "${PRINTER_CFG}.bak" ]; then
        mv "${PRINTER_CFG}.bak" "$PRINTER_CFG"
        echo -e "${GREEN}‚úÖ printer.cfg –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${RESET}"
    fi
    if [ -f "${GCODE_MACRO_CFG}.bak" ]; then
        mv "${GCODE_MACRO_CFG}.bak" "$GCODE_MACRO_CFG"
        echo -e "${GREEN}‚úÖ gcode_macro.cfg –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${RESET}"
    fi

    echo -e "${GREEN}‚úîÔ∏è –û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.${RESET}"
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
}

# --- –¶–∏–∫–ª –º–µ–Ω—é ---
while true; do
    show_menu
    read choice
    case $choice in
        1) apply_fixes ;;
        2) rollback_fixes ;;
        3) exit 0 ;;
        *) echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${RESET}"; sleep 1 ;;
    esac
done
