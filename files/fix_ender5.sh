#!/bin/bash
set -u

# fix_ender5.sh ‚Äî –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
# –î–µ–ª–∞–µ—Ç:
#  - —Å–æ–∑–¥–∞–µ—Ç –±—ç–∫–∞–ø—ã printer.cfg.bak –∏ gcode_macro.cfg.bak
#  - —É–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –±–ª–æ–∫–∏ (–Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π)
#  - –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ –±–ª–æ–∫–∏ (light_pin, controller_fan, multi_pin, –Ω–æ–≤—ã–µ –º–∞–∫—Ä–æ—Å—ã)
#  - –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤—Å—Ç–∞–≤–∫–∞ –±–ª–æ–∫–∞ firmware_retraction, BEEP, PID_BED, PID_HOTEND –∏ —Ç.–¥.
#
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   ./fix_ender5.sh        # –ø—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∫–∏
#   ./fix_ender5.sh --restore   # –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ .bak

PRINTER_CFG="/usr/data/printer_data/config/printer.cfg"
MACRO_CFG="/usr/data/printer_data/config/gcode_macro.cfg"
PRINTER_BAK="${PRINTER_CFG}.bak"
MACRO_BAK="${MACRO_CFG}.bak"

usage() {
  echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
  echo "  $0            # –≤–Ω–µ—Å—Ç–∏ –ø—Ä–∞–≤–∫–∏ (—Å–æ–∑–¥–∞—Å—Ç .bak –ø–µ—Ä–µ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏)"
  echo "  $0 --restore  # –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª—ã –∏–∑ .bak"
  exit 1
}

if [[ "${1:-}" == "--restore" ]]; then
  if [[ -f "$PRINTER_BAK" && -f "$MACRO_BAK" ]]; then
    cp -p "$PRINTER_BAK" "$PRINTER_CFG"
    cp -p "$MACRO_BAK" "$MACRO_CFG"
    echo "‚ôªÔ∏è  –ö–æ–Ω—Ñ–∏–≥–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ –±—ç–∫–∞–ø–æ–≤:"
    echo "    $PRINTER_BAK -> $PRINTER_CFG"
    echo "    $MACRO_BAK -> $MACRO_CFG"
    exit 0
  else
    echo "‚ùó –ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã:"
    echo "   $PRINTER_BAK"
    echo "   $MACRO_BAK"
    exit 2
  fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤
if [[ ! -f "$PRINTER_CFG" ]]; then
  echo "‚ùó –ù–µ –Ω–∞–π–¥–µ–Ω $PRINTER_CFG"
  exit 3
fi
if [[ ! -f "$MACRO_CFG" ]]; then
  echo "‚ùó –ù–µ –Ω–∞–π–¥–µ–Ω $MACRO_CFG"
  exit 4
fi

# –°–æ–∑–¥–∞—ë–º –±—ç–∫–∞–ø—ã
cp -p "$PRINTER_CFG" "$PRINTER_BAK"
cp -p "$MACRO_CFG" "$MACRO_BAK"
echo "üìÇ –°–æ–∑–¥–∞–Ω—ã –±—ç–∫–∞–ø—ã:"
echo "   $PRINTER_BAK"
echo "   $MACRO_BAK"

# ---------------------------
# printer.cfg ‚Äî –£–î–ê–õ–ï–ù–ò–ï —Å—Ç–∞—Ä—ã—Ö –±–ª–æ–∫–æ–≤ (–Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—ã—Ç–æ–∫)
# ---------------------------

# 1) Height_module2 ‚Äî –ø—Ä–æ—Å—Ç–∞—è –∑–∞–º–µ–Ω–∞ –≤ —Å—Ç—Ä–æ–∫–µ
sed -i 's/^\[output_pin Height_module2\]/[output_pin _Height_module2]/' "$PRINTER_CFG" \
  && echo "üîÅ –ó–∞–º–µ–Ω—ë–Ω [output_pin Height_module2] -> [output_pin _Height_module2]"

# 2) –£–¥–∞–ª—è–µ–º –ª—é–±—ã–µ —Å—Ç–∞—Ä—ã–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è light_pin
sed -i '/^\[output_pin light_pin\]/,/^$/d' "$PRINTER_CFG"
sed -i '/^\[output_pin light_pin\]/,/^\[/d' "$PRINTER_CFG"
echo "üóë –£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –±–ª–æ–∫–∏ [output_pin light_pin] (–µ—Å–ª–∏ –±—ã–ª–∏)"

# 3) –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è MainBoardFan (–µ—Å–ª–∏ –µ—Å—Ç—å)
sed -i '/^\[output_pin MainBoardFan\]/,/^$/d' "$PRINTER_CFG"
sed -i '/^\[output_pin MainBoardFan\]/,/^\[/d' "$PRINTER_CFG"
echo "üóë –£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –±–ª–æ–∫–∏ [output_pin MainBoardFan] (–µ—Å–ª–∏ –±—ã–ª–∏)"

# 4) –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –±–ª–æ–∫–∏ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–æ–≤ (fan0, en_fan0, fan1, en_fan1)
sed -i '/^\[output_pin fan0\]/,/^$/d' "$PRINTER_CFG"
sed -i '/^\[output_pin en_fan0\]/,/^$/d' "$PRINTER_CFG"
sed -i '/^\[output_pin fan1\]/,/^$/d' "$PRINTER_CFG"
sed -i '/^\[output_pin en_fan1\]/,/^$/d' "$PRINTER_CFG"
# –ó–∞–ø–∞—Å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞ —Å–ª—É—á–∞–π –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
sed -i '/^\[output_pin fan0\]/,/^\[/d' "$PRINTER_CFG"
sed -i '/^\[output_pin en_fan0\]/,/^\[/d' "$PRINTER_CFG"
sed -i '/^\[output_pin fan1\]/,/^\[/d' "$PRINTER_CFG"
sed -i '/^\[output_pin en_fan1\]/,/^\[/d' "$PRINTER_CFG"
echo "üóë –£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –±–ª–æ–∫–∏ –≤–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä–æ–≤ fan0/en_fan0/fan1/en_fan1 (–µ—Å–ª–∏ –±—ã–ª–∏)"

# –£–¥–∞–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∞—Ä—ã–µ –≤—Å—Ç–∞–≤–∫–∏ multi_pin/part_fans –∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã (—á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å)
sed -i '/^\[multi_pin part_fans\]/,/^$/d' "$PRINTER_CFG"
sed -i '/^\[multi_pin en_part_fans\]/,/^$/d' "$PRINTER_CFG"
sed -i '/^\[fan_generic part\]/,/^$/d' "$PRINTER_CFG"
sed -i '/^\[controller_fan MCU_fan\]/,/^$/d' "$PRINTER_CFG"
# –∑–∞–ø–∞—Å–Ω—ã–µ:
sed -i '/^\[multi_pin part_fans\]/,/^\[/d' "$PRINTER_CFG"
sed -i '/^\[multi_pin en_part_fans\]/,/^\[/d' "$PRINTER_CFG"
sed -i '/^\[fan_generic part\]/,/^\[/d' "$PRINTER_CFG"
sed -i '/^\[controller_fan MCU_fan\]/,/^\[/d' "$PRINTER_CFG"

# ---------------------------
# printer.cfg ‚Äî –î–û–ë–ê–í–õ–ï–ù–ò–ï –Ω–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤ (–≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞)
# ---------------------------

# –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫ light_pin (–ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä–æ–≥–æ ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω–æ)
cat <<'EOF' >> "$PRINTER_CFG"

[output_pin light_pin] # –æ—Å–≤–µ—â–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –ø—Ä–∏–Ω—Ç–µ—Ä–∞. –∫–æ—Å—è–∫ –ø—Ä–æ—à–∏–≤–∫–∏ –∫—Ä–µ–∞–ª–∏—Ç–∏.
pin: !PC0
pwm: True
cycle_time: 0.010
value: 1.0
EOF
echo "‚ûï –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –±–ª–æ–∫ [output_pin light_pin]"

# –î–æ–±–∞–≤–ª—è–µ–º controller_fan –∑–∞–º–µ–Ω—è—é—â–∏–π MainBoardFan
cat <<'EOF' >> "$PRINTER_CFG"

[controller_fan MCU_fan] # –≤–∫–ª—é—á–∞–µ–º –æ–±–¥—É–≤ –ø–æ—Å–ª–µ –≤–∫–ª—é—á–µ–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–æ–≤
pin: PB1
max_power: 1.0
fan_speed: 1
kick_start_time: 0
stepper: stepper_x
EOF
echo "‚ûï –î–æ–±–∞–≤–ª–µ–Ω –±–ª–æ–∫ [controller_fan MCU_fan]"

# –î–æ–±–∞–≤–ª—è–µ–º multi_pin + fan_generic (–¥–ª—è –∑–∞–º–µ–Ω—ã —Å—Ç–∞—Ä—ã—Ö fan0/fan1)
cat <<'EOF' >> "$PRINTER_CFG"

[multi_pin part_fans]
pins:!nozzle_mcu:PB15,!nozzle_mcu:PA9

[multi_pin en_part_fans]
pins:nozzle_mcu:PB6,nozzle_mcu:PB9

[fan_generic part]
pin: multi_pin:part_fans
enable_pin: multi_pin:en_part_fans
cycle_time: 0.0100
hardware_pwm: false
EOF
echo "‚ûï –î–æ–±–∞–≤–ª–µ–Ω—ã [multi_pin part_fans], [multi_pin en_part_fans], [fan_generic part]"

# ---------------------------
# gcode_macro.cfg ‚Äî –£–î–ê–õ–ï–ù–ò–ï —Å—Ç–∞—Ä—ã—Ö –º–∞–∫—Ä–æ—Å–æ–≤ –∏ –±–ª–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Å–æ–±–∏—Ä–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å
# ---------------------------

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è M106 –∏ M107 –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ (–ø–æ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–µ –∏ –∑–∞–ø–∞—Å–Ω–æ–π –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É –∑–∞–≥–æ–ª–æ–≤–∫—É)
sed -i '/^\[gcode_macro M106\]/,/^$/d' "$MACRO_CFG"
sed -i '/^\[gcode_macro M107\]/,/^$/d' "$MACRO_CFG"
sed -i '/^\[gcode_macro TURN_OFF_FANS\]/,/^$/d' "$MACRO_CFG"
sed -i '/^\[gcode_macro TURN_ON_FANS\]/,/^$/d' "$MACRO_CFG"
# –∑–∞–ø–∞—Å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
sed -i '/^\[gcode_macro M106\]/,/^\[/d' "$MACRO_CFG"
sed -i '/^\[gcode_macro M107\]/,/^\[/d' "$MACRO_CFG"
sed -i '/^\[gcode_macro TURN_OFF_FANS\]/,/^\[/d' "$MACRO_CFG"
sed -i '/^\[gcode_macro TURN_ON_FANS\]/,/^\[/d' "$MACRO_CFG"
echo "üóë –£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –º–∞–∫—Ä–æ—Å—ã M106/M107/TURN_OFF_FANS/TURN_ON_FANS (–µ—Å–ª–∏ –±—ã–ª–∏)"

# –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
sed -i '/^variable_fan0_min:/d' "$MACRO_CFG"
sed -i '/^variable_fan1_min:/d' "$MACRO_CFG"
echo "üóë –£–¥–∞–ª–µ–Ω—ã variable_fan0_min / variable_fan1_min (–µ—Å–ª–∏ –±—ã–ª–∏)"

# –£–¥–∞–ª—è–µ–º/–æ—á–∏—â–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∞—Ä—ã–µ –±–ª–æ–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∏–∂–µ:
for pat in "firmware_retraction" "gcode_shell_command beep" "gcode_macro BEEP" "delayed_gcode light_init" "exclude_object" "gcode_macro PID_BED" "gcode_macro PID_HOTEND"; do
  sed -i "/^\[${pat}\]/,/^$/d" "$MACRO_CFG"
  sed -i "/^\[${pat}\]/,/^\[/d" "$MACRO_CFG"
done
echo "üóë –£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –±–ª–æ–∫–∏ firmware_retraction / BEEP / PID_* / –∏ —Ç.–ø. (–µ—Å–ª–∏ –±—ã–ª–∏)"

# ---------------------------
# gcode_macro.cfg ‚Äî –î–û–ë–ê–í–õ–ï–ù–ò–ï –Ω–æ–≤—ã—Ö –±–ª–æ–∫–æ–≤ (–≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞)
# ---------------------------

# 1) –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫ RETRACTION, BEEP, PID –∏ –ø—Ä–æ—á–µ–µ
cat <<'EOF' >> "$MACRO_CFG"

[firmware_retraction]
retract_length: 0.45 # –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ç–æ–≥–æ –ø–ª–∞—Å—Ç–∏–∫–∞ –∫–æ—Ç–æ—Ä—ã–º —á–∞—â–µ –≤—Å–µ–≥–æ –ø–µ—á–∞—Ç–∞–µ—Ç–µ.
retract_speed: 30
unretract_extra_length: 0
unretract_speed: 30

[gcode_shell_command beep]
command: beep
timeout: 2
verbose: False

[gcode_macro BEEP] # –∑–≤—É–∫ –±–∏–ø. 
description: Play a sound
gcode:
  RUN_SHELL_COMMAND CMD=beep

[delayed_gcode light_init] 
initial_duration: 5.01
gcode:
  SET_PIN PIN=light_pin VALUE=1

[exclude_object] # –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –æ–±—å–µ–∫—Ç–æ–≤. 


[gcode_macro PID_BED]
gcode:
  PID_CALIBRATE HEATER=heater_bed TARGET={params.BED_TEMP|default(70)}
  SAVE_CONFIG

[gcode_macro PID_HOTEND] # –∏ –ø–æ—á–µ–º—É –µ–≥–æ –Ω–µ –±—ã–ª–æ. –¥–æ–±–∞–≤–∏–ª
description: Start Hotend PID
gcode:
  G90
  G28
  G1 Z10 F600
  M106 S255 #S255 
  PID_CALIBRATE HEATER=extruder TARGET={params.HOTEND_TEMP|default(250)}
  M107
EOF
echo "‚ûï –î–æ–±–∞–≤–ª–µ–Ω –±–ª–æ–∫ firmware_retraction + BEEP + PID_* –∏ —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏–µ"

# 2) –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –º–∞–∫—Ä–æ—Å—ã M106/M107 –∏ TURN_OFF/ON_FANS
cat <<'EOF' >> "$MACRO_CFG"

[gcode_macro M106]
description: Set Fan Speed. P0 for part
gcode:
  {% set fan_id = params.P|default(0)|int %}
  {% if fan_id == 0 %}
    {% set speed_param = params.S|default(255)|int %}
    {% if speed_param > 0 %}
      {% set speed = (speed_param|float / 255) %}
    {% else %}
      {% set speed = 0 %}
    {% endif %}
    SET_FAN_SPEED FAN=part SPEED={speed}
  {% endif %}

[gcode_macro M107]
description: Set Fan Off. P0 for part
gcode:
  SET_FAN_SPEED FAN=part SPEED=0

[gcode_macro TURN_OFF_FANS]
description: Stop chamber, auxiliary and part fan
gcode:
    SET_FAN_SPEED FAN=part SPEED=0

[gcode_macro TURN_ON_FANS]
description: Turn on chamber, auxiliary and part fan
gcode:
    SET_FAN_SPEED FAN=part SPEED=1
EOF
echo "‚ûï –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ –º–∞–∫—Ä–æ—Å—ã M106/M107/TURN_OFF_FANS/TURN_ON_FANS"

echo ""
echo "‚úÖ –í—Å–µ –ø—Ä–∞–≤–∫–∏ –≤–Ω–µ—Å–µ–Ω—ã. –§–∞–π–ª—ã:"
echo "   $PRINTER_CFG"
echo "   $MACRO_CFG"
echo ""
echo "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
echo "  - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: diff $PRINTER_BAK $PRINTER_CFG | sed -n '1,200p'"
echo "  - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–∞–∫—Ä–æ—Å—ã: grep -n \"gcode_macro\" $MACRO_CFG | sed -n '1,200p'"
echo "  - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ Klipper/–ø—Ä–∏–Ω—Ç–µ—Ä –ø–æ—Å–ª–µ –ø—Ä–∞–≤–æ–∫."
